import:		
	org.bukkit.Material		
	org.bukkit.block.BlockFace
	org.bukkit.material.MaterialData

options:


	prefix: &6&lBW &8- &cSETUP &e&l»

#
# \\ CODE - Do not modify it if you don't know what are you doing -_- //
#

function bw_setupGetBedData(loc: location, data: text) :: location:
	if minecraft version contains "1.8" or "1.9" or "1.10" or "1.11" or "1.12":
		loop blocks in radius 2 around {_loc}:
			"%type of loop-block%" contains "bed"
			set {_b} to loop-block
			if {_data} is "HEAD": 
				{_b}.getState().getData().isHeadOfBed() is true
				set {-bw::cache::setupBeds::CurrentFacing} to "%facing of loop-block%"
				return location of loop-block	
			if {_data} is "FOOT":
				{_b}.getState().getData().isHeadOfBed() is false
				set {-bw::cache::setupBeds::CurrentFacing} to "%facing of loop-block%"
				return location of loop-block 
	else:
		loop blocks in radius 2 around {_loc}:
			"%type of loop-block%" contains "bed"	
			if {_data} is "%loop-block.getBlockData().getPart()%":
				set {-bw::cache::setupBeds::CurrentFacing} to "%facing of loop-block%"
				return location of loop-block
			
function bw_setup_menu(p: player, menu: text):	
	if {_p} has permission "leafbw.setup":
		set {_arena} to metadata value "BW-SETUP" of {_p}
		{_menu} is "ARENA-SETTING":	
			open chest inventory with 5 rows named "&8» &3ARENA SETTINGS" to {_p}
			wait a tick
			#MIN TEAMS CHECK	
			if yaml value "MIN-TEAMS" from "bw.arena.%{_arena}%" is set:
				set {_check} to "&8[&a✔&8] &aDone."
			else:
				set {_check} to "&8[&c✘&8] &cNot set."
			make a gui slot 12 of {_p} with player head named {_check} with leaf lore "&3&l» &7&nClick to set minimum players to start arena." to run:	
				set {_slot} to -1
				open chest inventory with 1 rows named "&8» &7SET MIN" to {_p}
				wait a tick
				loop 8 times:
					set {_int} to loop-value-1
					make a gui slot {_slot} of {_p} with loop-number of player head named "&3&l» &7&nClick to set minimum teams to &c- &8(&b%{_int}%&8)" to run:
						set yaml value "MIN-TEAMS" from "bw.arena.%{_arena}%" to {_int}
						send "{@prefix} &7Setted the &aminimun teams &7to &a%{_int}%&7!" to {_p}
						bw_setup_menu(player, "ARENA-SETTING")
					add 1 to {_slot}	
			if yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%" is set:
				set {_check} to "&8[&a✔&8] &aDone."
			else:
				set {_check} to "&8[&c✘&8] &cNot set."			
			make a gui slot 14 of {_p} with player head named {_check} with leaf lore "&3&l» &7&nClick to set the number of players in team &8(&aSET 1 FOR SOLO MODE&8)." to run:		
				set {_slot} to 0	
				open chest inventory with 6 rows named "&8» &7Players per team" to {_p}
				wait 2 ticks
				loop 54 times:
					set {_int} to loop-value-1
					make a gui slot {_slot} of {_p} with loop-number of player head named "&3&l» &7&nClick to set the number of players in team to &c- &8(&b%{_int}%&8)" to run:
						set yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%" to {_int}
						send "{@prefix} &7Setted the &aplayers in team &7to &a%{_int}%&7!" to {_p}
						bw_setup_menu(player, "ARENA-SETTING")
					add 1 to {_slot}
				stop
			#CENTER CHECK	
			if yaml value "LOCATION.CENTER" from "bw.arena.%{_arena}%" is set:
				set {_check} to "&8[&a✔&8] &aDone."
			else:
				set {_check} to "&8[&c✘&8] &cNot set."					
			make a gui slot 29 of {_p} with compass named {_check} with leaf lore "&3&l» &7&nClick to set arena center." to run:
				set yaml value "LOCATION.CENTER" from "bw.arena.%{_arena}%" to location of {_p}	
				send "{@prefix} &7Setted the &aArena Center &7to your current location!" to {_p}		
				close {_p}'s inventory
			#LOBBY CHECK	
			if yaml value "LOCATION.LOBBY" from "bw.arena.%{_arena}%" is set:
				set {_check} to "&8[&a✔&8] &aDone."
			else:
				set {_check} to "&8[&c✘&8] &cNot set."					
			make a gui slot 33 of {_p} with pumpkin named {_check} with leaf lore "&3&l» &7Click to set arena lobby." to run:
				set yaml value "LOCATION.LOBBY" from "bw.arena.%{_arena}%" to location of {_p}	
				send "{@prefix} &7Setted the &aArena lobby &7to your location&7!" to {_p}
				close {_p}'s inventory			
			#LOBBY POS 1 CHECK	
			if yaml value "LOCATION.LOBBY-POS-1" from "bw.arena.%{_arena}%" is set:
				set {_check} to "&8[&a✔&8] &aDone."
			else:
				set {_check} to "&8[&c✘&8] &cNot set."			
			make a gui slot 0 of {_p} with nether star named {_check} with leaf lore "&3&l» &7&nCLICK TO SET LOBBY POSITION-1 &8(&aOPTIONAL&8)" to run:		
				set yaml value "LOCATION.LOBBY-POS-1" from "bw.arena.%{_arena}%" to location of {_p}
				send "{@prefix} &7LOBBY POSITION-1 for arena &a%{_arena}% &7has been set at &8[&3%location of {_p}%&8]" to {_p}
				close {_p}'s inventory	
			#LOBBY POS 2 CHECK	
			if yaml value "LOCATION.LOBBY-POS-2" from "bw.arena.%{_arena}%" is set:
				set {_check} to "&8[&a✔&8] &aDone."
			else:
				set {_check} to "&8[&c✘&8] &cNot set."			
			make a gui slot 8 of {_p} with nether star named {_check} with leaf lore "&3&l» &7&nCLICK TO SET LOBBY POSITION-2 &8(&aOPTIONAL&8)" to run:		
				set yaml value "LOCATION.LOBBY-POS-2" from "bw.arena.%{_arena}%" to location of {_p}
				send "{@prefix} &7LOBBY POSITION-2 for arena &a%{_arena}% &7has been set at &8[&3%location of {_p}%&8]" to {_p}
				close {_p}'s inventory					
			if yaml value "MAX-BUILD-HEIGHT" from "bw.arena.%{_arena}%" is set:
				set {_check} to "&8[&a✔&8] &aDone."
			else:
				set {_check} to "&8[&c✘&8] &cNot set."					
			make a gui slot 22 of {_p} with snowball named {_check} with leaf lore "&3&l» &7&nSET MAX HEIGHT &8(&aOPTIONAL&8)" to run:
				set yaml value "MAX-BUILD-HEIGHT" from "bw.arena.%{_arena}%" to y-coords of {_p}
				send "{@prefix} &e&l» &7Setted the &3&lMax height &7to your current location!" to {_p}
				close {_p}'s inventory	
			#OTHER
			make a gui slot 44 of {_p} with chest named "&3&l» &7&nClick to save arena." to run:
				make {_p} execute command "bwsetup saveArena %{_arena}%"
				close {_p}'s inventory	
				
			make a gui slot 36 of {_p} with lava bucket named "&3&l» &c&nClick to delete arena &8(&c!&8)" to run:
				make {_p} execute command "bwsetup deleteArena %{_arena}%"
				close {_p}'s inventory	
		#TEAMS
		if {_menu} is "ARENA-TEAMS":					
			open chest inventory with 6 rows named "&8» &3Arena Teams." to {_p}
			wait a tick
		#TEAMS CHECK
			set {_enable-slot} to 0
			set {_spawn-slot} to 9
			set {_bed-slot} to 18	
			set {_gen-slot} to 27		
			set {_shop-slot} to 36		
			set {_upgrade-slot} to 45
			loop "RED", "BLUE", "GREEN", "YELLOW", "CYAN", "WHITE", "PINK" and "GRAY":
				set {_team} to loop-value-1
				set {_display-item} to "%{_team}% clay" parsed as material
				set {_display-name} to yaml value "Teams.Name.%{_team}%" from "bw.language"		
				if yaml value "TEAMS.%{_team}%" from "bw.arena.%{_arena}%" is set:
					set {_check} to "&8[&a✔&8] &aDone."
				else:
					set {_check} to "&8[&c✘&8] &cNot set."
				make a gui slot {_enable-slot} of {_p} with {_display-item} named {_display-name} to run:
					if yaml value "TEAMS.%{_team}%" from "bw.arena.%{_arena}%" is set:
						delete yaml value "TEAMS.%{_team}%" from "bw.arena.%{_arena}%"
						bw_setup_menu(player, "ARENA-TEAMS")
						stop
					if yaml value "TEAMS.%{_team}%" from "bw.arena.%{_arena}%" is not set:
						set yaml value "TEAMS.%{_team}%" from "bw.arena.%{_arena}%" to "empty"
					bw_setup_menu(player, "ARENA-TEAMS")
				if yaml value "TEAMS.%{_team}%" from "bw.arena.%{_arena}%" is set:
					if yaml value "TEAMS.%{_team}%.SPAWN" from "bw.arena.%{_arena}%" is set:	
						set {_item} to beacon named "&aSPAWN FOR TEAM %{_display-name}% &8- &8[&a✔&8] &aDone."
					else:
						set {_item} to beacon named "&aSPAWN FOR TEAM %{_display-name}% &8- &8[&c✘&8] &cNot set."
					make a gui slot {_spawn-slot} of {_p} with {_item} to run:
						set yaml value "TEAMS.%{_team}%.SPAWN" from "bw.arena.%{_arena}%" to location of {_p}
						send "{@prefix} &aSpawn for team %{_display-name}% &ahas been set!"  to {_p}
						bw_setup_menu(player, "ARENA-TEAMS")
					#
					if yaml value "TEAMS.%{_team}%.GENERATOR" from "bw.arena.%{_arena}%" is set:	
						set {_item} to hopper named "&aGENERATOR FOR TEAM %{_display-name}% &8- &8[&a✔&8] &aDone."
					else:
						set {_item} to hopper named "&aGENERATOR FOR TEAM %{_display-name}% &8- &8[&c✘&8] &cNot set."
					make a gui slot {_gen-slot} of {_p} with hopper named "&aGENERATOR FOR TEAM %{_display-name}% &8- %{_check}%" to run:
						set yaml value "TEAMS.%{_team}%.GENERATOR" from "bw.arena.%{_arena}%" to location of {_p}
						send "{@prefix} &aGenerator for team %{_display-name}% &ahas been set!"  to {_p}
						bw_setup_menu(player, "ARENA-TEAMS")
					#
					if yaml value "TEAMS.%{_team}%.BED.HEAD.location" from "bw.arena.%{_arena}%" and yaml value "TEAMS.%{_team}%.BED.FOOT.location" from "bw.arena.%{_arena}%" is set:
						set {_item} to {-bw::cache::bed::engine} named "&aSET BED FOR TEAM %{_display-name}% &8(&7STAY ON IT&8) &8- &8[&a✔&8] &aDone."
					else:
						set {_item} to {-bw::cache::bed::engine} named "&aSET BED FOR TEAM %{_display-name}% &8(&7STAY ON IT&8) &8- &8[&c✘&8] &cNot set."
					make a gui slot {_bed-slot} of {_p} with {_item} to run:
						delete yaml value "TEAMS.%{_team}%.BED" from "bw.arena.%{_arena}%"
						yaml value "Misc.Game Block" from "bw.config" contains "bed":
							loop "HEAD" and "FOOT":
								set yaml value "TEAMS.%{_team}%.BED.%loop-value-2%.location" from "bw.arena.%{_arena}%" to bw_setupGetBedData(location of {_p}, "%loop-value-2%")
								set yaml value "TEAMS.%{_team}%.BED.%loop-value-2%.facing" from "bw.arena.%{_arena}%" to {-bw::cache::setupBeds::CurrentFacing}
								wait a tick	
						else:
							loop blocks in radius 2 of {_p}:
								"%type of loop-block%" contains yaml value "Misc.Game Block" from "bw.config"	
								set yaml value "TEAMS.%{_team}%.BED.HEAD.location" from "bw.arena.%{_arena}%" to location of loop-block
								set yaml value "TEAMS.%{_team}%.BED.FOOT.location" from "bw.arena.%{_arena}%" to location of loop-block
						if yaml value "TEAMS.%{_team}%.BED.HEAD.location" from "bw.arena.%{_arena}%" and yaml value "TEAMS.%{_team}%.BED.FOOT.location" from "bw.arena.%{_arena}%" is set:
							send "{@prefix} &aBED for team %{_display-name}% &ahas been set!" to {_p}	
							bw_setup_menu(player, "ARENA-TEAMS")
						else:
							send "{@prefix} &aNo bed found!" to {_p}
					#		
					if yaml value "TEAMS.%{_team}%.SHOP" from "bw.arena.%{_arena}%" is set:
						set {_item} to player head named "&aSHOP FOR TEAM: %{_display-name}% &8- &8[&a✔&8] &aDone."
					else:
						set {_item} to player head named "&aSHOP FOR TEAM: %{_display-name}% &8- &8[&c✘&8] &cNot set."
					make a gui slot {_shop-slot} of {_p} with {_item} to run:
						set {_loc} to location of player
						set pitch of {_loc} to 0
						set yaml value "TEAMS.%{_team}%.SHOP" from "bw.arena.%{_arena}%" to {_loc}
						send "{@prefix} &aShop for team %{_display-name}% &ahas been set!" to {_p}
						bw_setup_menu(player, "ARENA-TEAMS")				
					if yaml value "TEAMS.%{_team}%.UPGRADE" from "bw.arena.%{_arena}%" is set:
						set {_item} to anvil named "&aUPGRADE FOR TEAM: %{_display-name}% &8- &8[&a✔&8] &aDone."
					else:
						set {_item} to anvil named "&aUPGRADE FOR TEAM: %{_display-name}% &8- &8[&c✘&8] &cNot set."
					#
					make a gui slot {_upgrade-slot} of {_p} with {_item} to run:
						set {_loc} to location of player
						set pitch of {_loc} to 0					
						set yaml value "TEAMS.%{_team}%.UPGRADE" from "bw.arena.%{_arena}%" to {_loc}
						send "{@prefix} &aUpgrade location for team %{_display-name}% &ahas been set!" to {_p}
						bw_setup_menu(player, "ARENA-TEAMS")						
				add 1 to {_enable-slot} 
				add 1 to {_spawn-slot}
				add 1 to {_bed-slot}
				add 1 to {_gen-slot}	
				add 1 to {_shop-slot}	
				add 1 to {_upgrade-slot}					
		#GENERATORS
		{_menu} is "ARENA-GENERATORS":					
			open chest inventory with 4 rows named "&8» &3ARENA GENERATORS" to {_p}
			wait a tick
			set {_emerald} to size of yaml list "GENERATORS.EMERALD" from "bw.arena.%{_arena}%"
			set {_diamond} to size of yaml list "GENERATORS.DIAMOND" from "bw.arena.%{_arena}%"
			make a gui slot 11 of {_p} with emerald block named "&7Add &8[&aEMERALD&8] &7Generator &8(&b%{_emerald}%&8)" to run:	
				add location of player to yaml list "GENERATORS.EMERALD" from "bw.arena.%{_arena}%"
				send "{@prefix} &8[&aEMERALD&8] &7Generator added to &8[&3%location of player%&8]" to {_p}
				bw_setup_menu({_p}, "ARENA-GENERATORS")
			make a gui slot 15 of {_p} with diamond block named "&7Add &8[&bDIAMOND&8] &7Generator &8(&b%{_diamond}%&8)" to run:	
				add location of player to yaml list "GENERATORS.DIAMOND" from "bw.arena.%{_arena}%"
				send "{@prefix} &8[&bDIAMOND&8] &7Generator added to &8[&3%location of player%&8]" to {_p}
				bw_setup_menu({_p}, "ARENA-GENERATORS")
			make a gui slot 20 of {_p} with red dye named "&7Delete all &8[&aEMERALD&8] &7Generators" to run:	
				delete yaml list "GENERATORS.EMERALD" from "bw.arena.%{_arena}%"
				send "{@prefix} &7Delete all &8[&aEMERALD&8] &7Generators" to {_p}
				bw_setup_menu({_p}, "ARENA-GENERATORS")
			make a gui slot 24 of {_p} with red dye named "&7Delete all &8[&bDIAMOND&8] &7Generators" to run:	
				delete yaml list "GENERATORS.DIAMOND" from "bw.arena.%{_arena}%"	
				send "{@prefix} &7Delete all &8[&bDIAMOND&8] &7Generators" to {_p}
				bw_setup_menu({_p}, "ARENA-GENERATORS")	
		save yaml "bw.arena.%{_arena}%"	

			
command /bwsetup [<text = help>] [<text>] [<text>] [<world>]:
	executable by: players
	trigger:	
		if player has permission "leafbw.setup":			
			if arg-1 is "help":	
				send "&8«&7&l&m-------&8[ {@prefix} &8]&7&l&m-------&r&8»"				
				send "&7&l➜ &a/bwsetup setlobby"	
				send "&7&l➜ &a/bwsetup setnpc &8(&7stats, shop, shopkeeper or trails&8)"					
				send "&7&l➜ &a/bwsetup setplaynpc &8(&7mode&8)"							
				send "&7&l➜ &a/bwsetup createArena &8(&7arena_name&8) &8(&7map_name - &7optional&8)"
				send "&7&l➜ &a/bwsetup deleteArena &8(&7arena_name&8)"			
				send "&7&l➜ &a/bwsetup saveArena &8(&7arena_name&8)"			
				send "&7&l➜ &a/bwsetup editArena &8(&7arena_name&8)"
				send "&7&l➜ &a/bwsetup setmapname &8(&7arena_name&8) &8(&7map_name&8) - &7optional"		
				send "&7&l➜ &a/bwsetup setislandsize &8(&7arena_name&8) &8(&7size&8) - &7optional"	
				send "&7&l➜ &a/bwsetup setlobbyleave &8(&7needed only when bungeecord: false&8) - &7optional"							
				send "&7&l➜ &a/bwsetup createtopholo &8(&7type&8)"	
				send "&7&l➜ &a/bwsetup deletetopholo &8(&7id&8)"																																
				send "&8«&7&l&m-------------------------&r&8»"			
				stop					
			if arg-1 is "createArena":
				if arg-2 is set:	
					if yaml "bw.arena.%arg-2%" is not loaded:
						load yaml "plugins/LeafBedWars/arenas/%arg-2%.yml" as "bw.arena.%arg-2%"
					if yaml value "STATE" from "bw.arena.%arg-2%" is not set:
						set yaml value "STATE" from "bw.arena.%arg-2%" to "SETUP" 	
						set yaml value "MAP-NAME" from "bw.arena.%arg-2%" to arg-3						
						send "{@prefix} &7The arena &a%arg-2% &7has been successfully created!"	
						bw_setup_arena(player,"enter", arg-2)
						save yaml "bw.arena.%arg-2%"
					else:
						send "{@prefix} &cThis arena has already been created!"
				else:
					send "{@prefix} &7Specify arena name"		
			if arg-1 is "editarena":
				if arg-2 is set:
					if yaml value "STATE" from "bw.arena.%arg-2%" is set:
						if {-bw::cache::player::%player%::state} is "IN-GAME" or "IN-GAME-SPEC":
							send "%yaml value ""Messages.Prefix"" from ""bw.language""%%yaml value ""Messages.In Game"" from ""bw.language""%"	
							stop					
						if {-bw::cache::player::%player%::state} is "IN-LOBBY":
							#
							bw_separe_player(player)
							bw_clear_data(player)
							bw_clear_player(player)						
							#							
						remove arg-2 from {-bw::arenas::*}
						set yaml value "STATE" from "bw.arena.%arg-2%" to "SETUP" 
						send "{@prefix} &7You are now editing arena &a%arg-2%. &7!"	
						loop yaml nodes with keys "TEAMS" from "bw.arena.%arg-2%":
							bw_spawn_team_bed(arg-2, loop-value-1)						
						bw_setup_arena(player,"enter", arg-2)																										
					else:
						send "{@prefix} &cThis arena not exists!"
				else:
					send "{@prefix} &7Specify arena name"						
			if arg-1 is "SetMapName":
				if arg-2 is set:
					if arg-3 is set:
						if yaml value "STATE" from "bw.arena.%arg-2%" is set:
							set yaml value "MAP-NAME" from "bw.arena.%arg-2%" to arg-3		
							send "{@prefix} &7Map name of arena &a%arg-2% &7is now &a%arg-3%&7!"
							save yaml "bw.arena.%arg-2%"
						else:
							send "{@prefix} &cThis arena not exists!"								
					else:
						send "{@prefix} &7Specify map name"
				else:
					send "{@prefix} &7Specify arena name"						
			if arg-1 is "SetIslandSize":
				if arg-2 is set:
					if arg-3 is set:
						if yaml value "STATE" from "bw.arena.%arg-2%" is set:
							set yaml value "ISLAND-SIZE" from "bw.arena.%arg-2%" to arg-3 parsed as number		
							send "{@prefix} &7Island size of arena &a%arg-2% &7is now &a%arg-3%&7!"
							save yaml "bw.arena.%arg-2%"
						else:
							send "{@prefix} &cThis arena not exists!"								
					else:
						send "{@prefix} &7Specify map name"
				else:
					send "{@prefix} &7Specify arena name"															
			if arg-1 is "deleteArena":
				if yaml "bw.arena.%arg-2%" is loaded:
					delete yaml "bw.arena.%arg-2%"
					remove arg-2 from {-bw::arenas::*}
					bw_setup_arena(player,"exit", arg-2)
					send "{@prefix} &aArena &c%arg-2% has been deleted &7!"	
				else:
					send "{@prefix} &cThis arena not exists!"
			if arg-1 is "saveArena":
				if arg-2 is set:
					set {_arena} to arg-2
					if yaml value "STATE" from "bw.arena.%arg-2%" is "SETUP":
						if yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%" is set:
							if yaml value "MIN-TEAMS" from "bw.arena.%{_arena}%" is set:											
								if yaml value "LOCATION.CENTER" from "bw.arena.%{_arena}%" is set:
									if yaml value "LOCATION.LOBBY" from "bw.arena.%{_arena}%" is set:
										if yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%" is set:
											if size of yaml nodes with keys "TEAMS" from "bw.arena.%{_arena}%" >= 2:
												loop yaml nodes with keys "TEAMS" from "bw.arena.%{_arena}%":
													if yaml value "TEAMS.%loop-value%.SPAWN" from "bw.arena.%{_arena}%" is not set:
														send "{@prefix} &cSpawn for team &9%loop-value% &cis not set!"
														stop
													if yaml value "TEAMS.%loop-value%.SHOP" from "bw.arena.%{_arena}%" is not set:	
														send "{@prefix} &cShop for team &9%loop-value% &cis not set!"
														stop														
													if yaml value "TEAMS.%loop-value%.GENERATOR" from "bw.arena.%{_arena}%" is not set:
														send "{@prefix} &cGenerator for team &9%loop-value% &cis not set!"
														stop		
													if yaml value "TEAMS.%loop-value%.BED.FOOT" from "bw.arena.%{_arena}%" and yaml value "TEAMS.%loop-value%.BED.HEAD" from "bw.arena.%{_arena}%" is not set:
														send "{@prefix} &cBed for team &9%loop-value% &cis not set!"
														stop	
													if yaml value "TEAMS.%loop-value%.UPGRADE" from "bw.arena.%{_arena}%" is not set:
														send "{@prefix} &cUpgrade Location for team &9%loop-value% &cis not set!"
														stop															
												if yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%" = 1:
													set yaml value "TYPE" from "bw.arena.%{_arena}%" to "SOLO"
												if yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%" = 2:	
													set yaml value "TYPE" from "bw.arena.%{_arena}%" to "DOUBLES"
												if yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%" = 3:	
													set yaml value "TYPE" from "bw.arena.%{_arena}%" to "TRIPLES"
												if yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%" = 4:	
													set yaml value "TYPE" from "bw.arena.%{_arena}%" to "QUADRUPLES"
												if yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%" >= 5:	
													set yaml value "TYPE" from "bw.arena.%{_arena}%" to "MEGA"
												set yaml value "ISLAND-SIZE" from "bw.arena.%arg-2%" to 10																
												set yaml value "MAX" from "bw.arena.%{_arena}%" to rounded size of yaml nodes with keys "TEAMS" from "bw.arena.%{_arena}%" * yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%"
												set yaml value "MIN" from "bw.arena.%{_arena}%" to rounded yaml value "MIN-TEAMS" from "bw.arena.%{_arena}%" * yaml value "PLAYERS-PER-TEAM" from "bw.arena.%{_arena}%"
												if yaml value "MAP-NAME" from "bw.arena.%{_arena}%" is not set:
													set yaml value "MAP-NAME" from "bw.arena.%{_arena}%" to {_arena}													
												send "{@prefix} &aSaving the arena..."													
												send "{@prefix} &7The arena &a%{_arena}%&7 has been saved!"												
												bw_setup_arena(player, "exit", "1")									
												set yaml value "STATE" from "bw.arena.%arg-2%" to "READY"
												save yaml "bw.arena.%arg-2%"
												bw_waiting_lobby("save", {_arena}, {_arena})	
												add {_arena} to {-bw::arenas::*}
											else:
												send "{@prefix} &cYou have to set the number of players in a team!"													
										else:
											send "{@prefix} &cYou not have enough teams!"											
									else:
										send "{@prefix} &cYou must set arena lobby!"												
								else:
									send "{@prefix} &cYou must set arena center!"																																																											
							else:
								send "{@prefix} &cYou need to set the minimum teams to start arena!"
						else:
							send "{@prefix} &cYou need to set number of players in team!"
					else:
						send "{@prefix} &7This arena not exist"
				else:
					send "{@prefix} &7Specify arena name"						
			if arg-1 is "setlobby":
				set yaml value "LOCATIONS.LOBBY" from "bw.data" to player's location
				send "&6&lBW &8- &cSETUP &e&l» &7Setted the &aLobby &7to your current location!"
				save yaml "bw.data"	
			if arg-1 is "setnpc":
				if arg-2 is "STATS" or "SHOP" or "TRAILS" or "SHOPKEEPER":
					set yaml value "Npcs.Lobby.%arg-2 in upper case%.Location" from "bw.data" to location of player
					send "&6&lBW &8- &cSETUP &e&l» &7Setted the &b%arg-2 in upper case% &aNpc &7to your current location!"
					save yaml "bw.data"	
				else:
					send "&6&lBW &8- &cSETUP &e&l» &7Incorrect npc use stats, trails or shopkeeper!"			
			if arg-1 is "setplaynpc":
				if arg-2 is "SOLO" or "DOUBLES" or "TRIPLES" or "QUADRUPLES" or "MEGA":
					set yaml value "Npcs.Lobby.%arg-2 in upper case%.Location" from "bw.data" to location of player
					send "&6&lBW &8- &cSETUP &e&l» &7Setted the &b%arg-2 in upper case% &aPlay Npc &7to your current location!"
					save yaml "bw.data"
					bw_update_play_npcs()
				else:
					send "&6&lBW &8- &cSETUP &e&l» &7Please specify mode."											
			if arg-1 is "createtopholo":
				if arg-2 is "coins" or "level" or "xp" or "wins" or "kills" or "deaths" or "final-kills" or "broken-beds":
					set {_size} to size of yaml nodes with keys "Holograms2" from "bw.data"
					set yaml value "Holograms2.%{_size}%.Type" from "bw.data" to arg-2			
					set yaml value "Holograms2.%{_size}%.location" from "bw.data" to location of player
					send "&6&lBW &8- &cSETUP &e&l» &7Created leaderboards hologram with id &a%{_size}%!"
					save yaml "bw.data"
					bw_update_Leaderboards()
				else:
					send "&6&lBW &8- &cSETUP &e&l» &7Please specify a type, types: &3coins, level, xp, wins, kills, deaths, final-kills and broken-beds."		
			if arg-1 is "deletetopholo":
				if yaml value "Holograms2.%arg-2%" from "bw.data" is set:
					set {_loc} to yaml value "Holograms2.%arg-2%.location" from "bw.data"
					loop armor stands in radius 10 of {_loc}:
						metadata value "Leaf_BEDWARS" of loop-entity is set
						clear loop-entity				
					delete yaml value "Holograms2.%arg-2%" from "bw.data"
					send "&6&lBW &8- &cSETUP &e&l» &7Deleted for top holo &a%arg-2%!"
					save yaml "bw.data"
					bw_update_Leaderboards()
				else:
					send "&6&lBW &8- &cSETUP &e&l» &7Please specify the hologram id."											
			if arg-1 is "deleteholo":
				if yaml value "Holograms.%arg-2%" from "bw.data" is set:
					set {_loc} to yaml value "Holograms.%arg-2%.location" from "bw.data"
					loop armor stands in radius 10 of {_loc}:
						metadata value "Leaf_BEDWARS" of loop-entity is set
						clear loop-entity											
					delete yaml value "Holograms.%arg-2%" from "bw.data"
					send "&6&lBW &8- &cSETUP &e&l» &7Deleted for holo &a%arg-2%!"
					save yaml "bw.data"
				else:
					send "&6&lBW &8- &cSETUP &e&l» &7Please specify the hologram id."														
			if arg-1 is "setlobbyleave":
				set yaml value "LOCATIONS.LOBBY-LEAVE" from "bw.data" to player's location
				send "&6&lBW &8- &cSETUP &e&l» &7Setted the &aLobby Leave &7to your current location!"
				save yaml "bw.data"			
		else:
			send "{@prefix} &7You don't have permission do to this."
	
		
function bw_setup_arena(p: player, do: text, arena: text):
	if {_do} is "enter":
		clear {_p}'s inventory			
		set metadata value "BW-SETUP" of {_p} to {_arena}
		set slot 3 of {_p} to player head named "&8[&bARENA &8- &bSETTINGS&8]" with custom nbt "{SkullOwner:{Id:""79d6eb9e-78bc-4f5f-a521-3fefbc0f0057"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvY2Y0MDk0MmYzNjRmNmNiY2VmZmNmMTE1MTc5NjQxMDI4NmE0OGIxYWViYTc3MjQzZTIxODAyNmMwOWNkMSJ9fX0=""}]}}}"	
		set slot 4 of {_p} to player head named "&8[&bARENA &8- &bTEAMS&8]" with custom nbt "{SkullOwner:{Id:""33a84c61-263c-4689-a62c-3b8044e1ff4d"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZDVjNmRjMmJiZjUxYzM2Y2ZjNzcxNDU4NWE2YTU2ODNlZjJiMTRkNDdkOGZmNzE0NjU0YTg5M2Y1ZGE2MjIifX19""}]}}}"		
		set slot 5 of {_p} to player head named "&8[&bARENA &8- &bGENERATORS&8]" with custom nbt "{SkullOwner:{Id:""7c10ae35-bc55-465c-a0fc-b2415e900c79"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYWM5MDZkNjg4ZTY1ODAyNTY5ZDk3MDViNTc5YmNlNTZlZGM4NmVhNWMzNmJkZDZkNmZjMzU1MTZhNzdkNCJ9fX0=""}]}}}"		
		teleport {_p} to yaml value "LOCATION.CENTER" from "bw.arena.%{_arena}%"
		stop
	if {_do} is "exit":		
		delete metadata value "BW-SETUP" of {_p}
		loop all items in {_p}'s inventory:
			name of loop-item is "&8[&bARENA &8- &bSETTINGS&8]" or "&8[&bARENA &8- &bTEAMS&8]" or "&8[&bARENA &8- &bGENERATORS&8]"
			clear loop-item

on right click:		
	metadata value "BW-SETUP" of player is set	
	if name of event-item is "&8[&bARENA &8- &bSETTINGS&8]":
		cancel event
		bw_setup_menu(player, "ARENA-SETTING")
	if name of event-item is "&8[&bARENA &8- &bTEAMS&8]":
		cancel event
		bw_setup_menu(player, "ARENA-TEAMS")
	if name of event-item is "&8[&bARENA &8- &bGENERATORS&8]":
		cancel event
		bw_setup_menu(player, "ARENA-GENERATORS")	

on load:
	broadcast "%yaml value ""Messages.Prefix"" from ""bw.language""%&aSetup module loaded."